<?php
/**
 * @file
 * Drupal Commerce Cart Ajax module.
 * Ajax features for Drupal Commerce Cart. Quick item removal and quantity changes.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 * Alter to cart form to add #ajax properties.
 */
function dc_cart_ajax_form_views_form_alter(&$form, $form_state, $form_id) {
  $alter = strpos($form_id, 'views_form_commerce_cart_block_') === 0;
  $alter = $alter || ($form_id === 'views_form_commerce_cart_form_default');
  if ($alter) {
    _dc_cart_ajax_form_views_form_alter($form, $form_state, $form_id);
  }
}

function _dc_cart_ajax_form_views_form_alter(&$form, $form_state, $form_id) {
  $view = &$form_state['build_info']['args'][0];
  if ($view->use_ajax) {
    // Issue #1390854
    $form['#action'] = url('cart');

    $fake_link = 'dc-cart-ajax-' . str_replace('_', '-', $form_id);
    $fake_link = '<a href="#" class="dc-cart-ajax-fake-link" id="'. $fake_link .'">&nbsp;</a>';
    $form['#prefix']  = $form['#prefix'] . '<div id="dc-cart-ajax-form-wrapper">';
    $form['#suffix']  = '</div>' . $form['#suffix'];
    $form['#suffix'] .= '<div class="attachment"><div class="views-summary">'. $fake_link .'</div></div>';
    $form['#attached']['js'][] = drupal_get_path('module', 'dc_cart_ajax') . '/misc/js/dc_cart_ajax.js';

    $ajax = array(
      'callback' => 'dc_cart_ajax_form_views_form_commerce_cart_form_ajax_submit',
      'wrapper' => 'dc-cart-ajax-form-wrapper',
      'method' => 'replace',
      'progress' => array('type' => 'throbber', 'message' => ''),
    );

    $form['actions']['submit']['#ajax'] = $ajax;
    if (!empty($form['edit_delete'])) {
      foreach (element_children($form['edit_delete']) as $k) {
        $form['edit_delete'][$k]['#ajax'] = $ajax;
      }
    }
  }
}

/**
 * Ajax callback for cart form.
 */
function dc_cart_ajax_form_views_form_commerce_cart_form_ajax_submit(&$form, &$form_state) {
  $order = commerce_cart_order_load($GLOBALS['user']->uid);
  $is_empty = empty($order->commerce_line_items);
  $output = '';
  if ($is_empty) {
    $output = menu_execute_active_handler('cart', FALSE);
  }

  $commands[] = array(
    'command' => 'dc_cart_ajax',
    'output'  => $output,
    'message' => theme('status_messages'),
    'form-id' => str_replace('_', '-', $form['#form_id']),
  );

  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dc_cart_ajax_form_commerce_cart_add_to_cart_form_alter(&$form, $form_state, $form_id) {
  $form['submit']['#ajax'] = array('callback' => 'dc_cart_ajax_form_commerce_cart_add_to_cart_form_ajax_callback');
  $form['submit']['#attached']['js'] = array(drupal_get_path('module', 'dc_cart_ajax') . '/misc/js/dc_cart_ajax.js');
  $form['#submit'][] = 'dc_cart_ajax_form_commerce_cart_add_to_cart_form_submit';
}

/**
 * Custom submit callback for commerce_cart_add_to_cart_form.
 * commerce_cart only allow submit the form once. This hack fix it.
 */
function dc_cart_ajax_form_commerce_cart_add_to_cart_form_submit($form, &$form_state) {
  $line_item = $form_state['build_info']['args'][0];
  $form_state['line_item'] = $line_item;
}

/**
 * Ajax callback for commerce_cart_add_to_cart_form.
 * @see dc_cart_ajax_form_commerce_cart_add_to_cart_form_alter().
 */
function dc_cart_ajax_form_commerce_cart_add_to_cart_form_ajax_callback($form, &$form_state, $form_id) {
  $commands[] = array(
    'command' => 'dc_cart_ajax_add_to_cart_form',
    'message' => theme('status_messages'),
    'form-id' => str_replace('_', '-', $form['#form_id']),
    'line-item' => $form_state['line_item'],
    'form_state' => $form_state,
  );
  return array('#type' => 'ajax', '#commands' => $commands);
}
